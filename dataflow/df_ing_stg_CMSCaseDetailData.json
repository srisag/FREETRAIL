{
	"name": "df_ing_stg_CMSCaseDetailData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_CMSCaseDetailData",
						"type": "DatasetReference"
					},
					"name": "CMSCaseDetail"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_STG_ING_CMS_Case_Document",
						"type": "DatasetReference"
					},
					"name": "sinkINGCMSCaseDocument"
				}
			],
			"transformations": [
				{
					"name": "FlattenMain"
				},
				{
					"name": "ConvertArrayToString"
				},
				{
					"name": "CleanUpAndDerive"
				},
				{
					"name": "SelectRequredFields"
				}
			],
			"scriptLines": [
				"parameters{",
				"     p_file_name as string ('2022/05/2022-05-04_CMSCaseDetailData.json'),",
				"     p_run_id as integer (0),",
				"     p_processing_date as string ('2022-05-04')",
				"}",
				"source(output(",
				"          cmsCaseDocList as (caseId as string, cmsDocuments as (documentId as string, documentName as string, documentCategory as string, description as string, stage as string, cmsDocumentVersions as (versionId as string, modifiedBy as string, dateModified as string, versionNumber as string, versionName as string, modifiedByUserId as string, escribaDocId as string, envelopeStatus as string, gddMetadata as (dealID as string, dealStatus as string, dealVersion as string)[])[])[])[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     rowUrlColumn: 'sourceFile',",
				"     documentForm: 'documentPerLine',",
				"     wildcardPaths:[(concat('CMS/CMSCaseDetailData/',$p_file_name))]) ~> CMSCaseDetail",
				"CMSCaseDetail foldDown(unroll(cmsCaseDocList.cmsDocuments.cmsDocumentVersions),",
				"     mapColumn(",
				"          caseId = cmsCaseDocList.caseId,",
				"          documentId = cmsCaseDocList.cmsDocuments.documentId,",
				"          documentName = cmsCaseDocList.cmsDocuments.documentName,",
				"          documentCategory = cmsCaseDocList.cmsDocuments.documentCategory,",
				"          description = cmsCaseDocList.cmsDocuments.description,",
				"          stage = cmsCaseDocList.cmsDocuments.stage,",
				"          versionId = cmsCaseDocList.cmsDocuments.cmsDocumentVersions.versionId,",
				"          modifiedBy = cmsCaseDocList.cmsDocuments.cmsDocumentVersions.modifiedBy,",
				"          dateModified = cmsCaseDocList.cmsDocuments.cmsDocumentVersions.dateModified,",
				"          versionNumber = cmsCaseDocList.cmsDocuments.cmsDocumentVersions.versionNumber,",
				"          versionName = cmsCaseDocList.cmsDocuments.cmsDocumentVersions.versionName,",
				"          modifiedByUserId = cmsCaseDocList.cmsDocuments.cmsDocumentVersions.modifiedByUserId,",
				"          escribaDocId = cmsCaseDocList.cmsDocuments.cmsDocumentVersions.escribaDocId,",
				"          gddMetadata = cmsCaseDocList.cmsDocuments.cmsDocumentVersions.gddMetadata,",
				"          envelopeStatus = cmsCaseDocList.cmsDocuments.cmsDocumentVersions.envelopeStatus,",
				"          sourceFile",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FlattenMain",
				"FlattenMain aggregate(groupBy(caseId,",
				"          documentId,",
				"          documentName,",
				"          documentCategory,",
				"          description,",
				"          stage,",
				"          versionId,",
				"          modifiedBy,",
				"          dateModified,",
				"          versionNumber,",
				"          versionName,",
				"          modifiedByUserId,",
				"          escribaDocId,",
				"          envelopeStatus,",
				"          sourceFile),",
				"     GDDDeals_all = iif(toString(collect(gddMetadata)) =='[]', toString(null()), toString(collect(gddMetadata)))) ~> ConvertArrayToString",
				"ConvertArrayToString derive(Gdd_Deals_all = (replace(replace(GDDDeals_all, '[[', '['),']]',']')),",
				"          Gdd_Deals_ID_main = replace(regexSplit(regexSplit(GDDDeals_all, ',')[1],':')[2], '\"',''),",
				"          dateModified = toTimestamp(dateModified, \"EEE MMM dd HH:mm:ss ZZZZ yyyy\"),",
				"          Ingestion_loading_date = toDate(substring(sourceFile, (instr(sourceFile, '_CMSCaseDetailData.json')-10), 10)),",
				"          STG_loading_date = currentTimestamp(),",
				"          run_id = $p_run_id,",
				"          STG_checksum = sha2(256, byNames(['caseId','documentId','documentName','documentCategory','description','stage','versionId','modifiedBy','dateModified','versionNumber','versionName','modifiedByUserId','escribaDocId','envelopeStatus','GDDDeals_all'])),",
				"          is_Last = 1) ~> CleanUpAndDerive",
				"CleanUpAndDerive select(mapColumn(",
				"          caseId,",
				"          documentId,",
				"          documentName,",
				"          documentCategory,",
				"          description,",
				"          stage,",
				"          versionId,",
				"          modifiedBy,",
				"          dateModified,",
				"          versionNumber,",
				"          versionName,",
				"          modifiedByUserId,",
				"          escribaDocId,",
				"          envelopeStatus,",
				"          GDDDeals_all,",
				"          Gdd_Deals_all,",
				"          Gdd_Deals_ID_main,",
				"          Ingestion_loading_date,",
				"          STG_loading_date,",
				"          run_id,",
				"          STG_checksum,",
				"          is_Last",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectRequredFields",
				"SelectRequredFields sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Case_ID as string,",
				"          Document_ID as string,",
				"          Version_ID as string,",
				"          Version_Number as string,",
				"          Doc_Name as string,",
				"          Doc_Category as string,",
				"          Doc_Description as string,",
				"          Version_Name as string,",
				"          Modified_Date as string,",
				"          Modify_By as string,",
				"          Doc_stage as string,",
				"          Escriba_Doc_ID as string,",
				"          Gdd_Deals_ID_main as string,",
				"          Gdd_Deals_all as string,",
				"          DocuSign_EnvelopeStatus as string,",
				"          Is_Last as integer,",
				"          Ingestion_loading_date as string,",
				"          STG_loading_date as timestamp,",
				"          RUN_ID as long,",
				"          STG_checksum as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Case_ID = caseId,",
				"          Document_ID = documentId,",
				"          Doc_Name = documentName,",
				"          Doc_Category = documentCategory,",
				"          Doc_Description = description,",
				"          STG_loading_date = stage,",
				"          Version_ID = versionId,",
				"          Modify_By = modifiedBy,",
				"          Modified_Date = dateModified,",
				"          Version_Number = versionNumber,",
				"          Version_Name = versionName,",
				"          Modify_By = modifiedByUserId,",
				"          Escriba_Doc_ID = escribaDocId,",
				"          DocuSign_EnvelopeStatus = envelopeStatus,",
				"          Gdd_Deals_all = GDDDeals_all,",
				"          Gdd_Deals_all,",
				"          Gdd_Deals_ID_main,",
				"          Ingestion_loading_date,",
				"          STG_loading_date,",
				"          RUN_ID = run_id,",
				"          STG_checksum,",
				"          Is_Last = is_Last",
				"     )) ~> sinkINGCMSCaseDocument"
			]
		}
	}
}